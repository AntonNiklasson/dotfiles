
call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'leafgarland/typescript-vim'
Plug 'mhartington/oceanic-next'
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'styled-components/vim-styled-components', { 'branch': 'main' }
Plug 'w0rp/ale'
Plug 'xuyuanp/nerdtree-git-plugin'
Plug 'itchyny/lightline.vim'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-fugitive'
Plug 'editorconfig/editorconfig-vim'
Plug 'junegunn/vim-slash'
call plug#end()

filetype plugin indent on

" Colors
syntax enable
set termguicolors
set t_Co=256
set background=dark
colorscheme OceanicNext

" Font
set guifont="Source Code Pro":h14

" Leader commands
let mapleader = " "
"nnoremap <Leader>fo :NERDTreeToggle<cr>
"nnoremap <Leader>p :ALEFix<cr>:<backspace>
nnoremap <Leader>, :tabfind $MYVIMRC<cr>
nnoremap <Leader>f :NERDTreeFind<cr>
nnoremap <Leader>k :ALENextWrap<cr>:<backspace>
nnoremap <Leader>l :noh<cr>:<backspace>
nnoremap <Leader>p :Files<cr>
nnoremap <Leader>r :source $MYVIMRC<cr>
nnoremap <Leader>ss :split<cr>
nnoremap <Leader>sv :vsplit<cr>
nnoremap <Leader>t :tabe<cr>

" Move between splits with ctrl+{h,j,k,l}
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" Remaps for the lazy
nnoremap ; :
nnoremap :q :close
inoremap jj <Esc>


" Ctrl+P
let g:ctrlp_show_hidden = 1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](node_modules|.git|vendor|.cache|.next|dist|storybook-static)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': '',
  \ }
let g:ctrlp_working_path_mode = 0
let g:ctrlp_lazy_update = 0


" NERDTree
let g:NERDTreeIgnore = ['\.aux$', '\~$']
let NERDTreeShowHidden = 1
let g:NERDTreeWinSize=40


" Ale
let g:ale_fix_on_save = 1
" let g:ale_set_highlights = 0
highlight ALEWarning ctermbg=94
let g:ale_linters = {
  \ 'javascript': ['stylelint', 'eslint', 'tslint'],
\}
let g:ale_fixers = {
	\ 'javascript': ['prettier'],
	\ 'typescript': ['prettier'],
  \ 'json': ['prettier'],
  \ 'css': ['prettier', 'stylelint'],
	\ 'markdown': ['prettier'],
\}
let g:ale_linter_aliases = {
  \ 'javascript.jsx': ['css', 'javascript'],
  \ 'json': [],
\}
let g:ale_fixer_aliases = {
	\ 'javascript.jsx': ['javascript', 'css'],
\}

" NERDCommenter
let g:NERDSpaceDelims = 0
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1
let g:NERDToggleCheckAllLines = 1

" vim-jsx
let g:jsx_ext_required = 0


" Lightline
" 


" vim-slash
if has('timers')
  " Blink 2 times with 50ms interval
  noremap <expr> <plug>(slash-after) slash#blink(3, 50)
endif


set laststatus=2
set noshowmode
set backspace=indent,eol,start
set backupcopy=yes
set cursorline
set encoding=utf-8
set foldlevelstart=20
set foldmethod=syntax
set hlsearch
set ignorecase
set mouse=a
set noexpandtab
set nolist
set noswapfile
set nowrap
set number
set norelativenumber
set scrolloff=3
set shiftwidth=2
set showtabline=3
set softtabstop=2
set splitbelow
set splitright
set tabstop=2
set exrc
set backupcopy=yes

" File associations
autocmd BufRead,BufNewFile *.blade.php set filetype=html
autocmd BufRead,BufNewFile .vimrc set filetype=vim
autocmd BufRead,BufNewFile .babelrc set filetype=json
autocmd BufRead,BufNewFile *.ts.snap set filetype=typescript

" Language Settings
autocmd BufRead,BufNewFile *.md set wrap|set textwidth=80
